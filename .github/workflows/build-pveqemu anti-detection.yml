name: Build pve-qemu anti-detection

on:
  workflow_dispatch:
  push:
    branches:
      - master
    paths:
      - '.configqemu'

env:
  REPO_URL: https://git.proxmox.com/git/pve-qemu.git
  REPO_BRANCH: master
  CONFIG_FILE: .config
  SCRIPTS_PATH: ${{ github.workspace }}/scripts
  SSH_ACTIONS: false
  UPLOAD_BIN_DIR: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@main
    
    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        while IFS='=' read -r key value; do
          [[ $key =~ ^#.*$ ]] && continue
          echo "$key=$value" >> $GITHUB_ENV
        done < .configqemu
        echo "REPO_COMMIT=$REPO_COMMIT"

    - name: Clone source code
      run: |
        git clone $REPO_URL -b $REPO_BRANCH pve-qemu
        git reset --hard $REPO_COMMIT
    
    - name: Add sedPatch File
      run: |
        cd pve-qemu
        cp $SCRIPTS_PATH/QEMUPatches/sedPatch-pve-qemu-kvm7.0-8.1-anti-detection.sh .
        
    - name: Freeing up disk space on CI system
      run: |
        dpkg-query -Wf '${Installed-Size}\t${Package}\n' | sort -n | tail -n 100
        du -d 4 -ah / | sort -h | tail -n 100
        df -h
        sudo chmod a+x $SCRIPTS_PATH/free_disk.sh && sudo $SCRIPTS_PATH/free_disk.sh
        df -h
        
    - name: Setting up Docker Environment
      run: |
        sudo apt-get install ca-certificates curl gnupg lsb-release
        sudo mkdir -m 0755 -p /etc/apt/keyrings
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
        sudo chmod a+r /etc/apt/keyrings/docker.gpg
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        sudo apt-get update
        sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

    - name: Compile the PVE QEMU
      id: compile
      run: |
        sudo chmod a+x $SCRIPTS_PATH/dockerun_qemubuild.sh
        sudo docker run -v ${{ github.workspace }}:/home/build debian:bookworm /home/build/scripts/dockerun_qemubuild.sh
        echo "status=success" >> $GITHUB_OUTPUT
  
    - name: Create Release Directory
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      run: |
        sudo chmod a+w pve-qemu
        cd pve-qemu
        mkdir release
        cp *deb release/
        
    - name: Init version number
      id: getverion
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      run: |
        cd pve-qemu
        echo "version=$(ls pve-qemu-kvm-dbgsym* | sed -E 's/.*_([0-9.]+-[0-9]+)_amd64\.deb/\1/')" >> $GITHUB_OUTPUT
      
    - name: Upload kernel directory
      uses: actions/upload-artifact@master
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: ${{ format('{0-anti-detection}', steps.getverion.outputs.version) }} 
        path: pve-qemu/release
